{"version":3,"sources":["components/Header.js","components/ListItem.js","components/Barcodes.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","style","color","ListItem","state","inStock","isDroppedDown","units","unitsInputRef","React","createRef","handleListItemOnClick","bind","handleArrowOnClick","handleUnitsChange","handleUnitsDisplayOnClick","this","setState","props","setInStock","sku","event","stopPropagation","input","target","value","setUnits","current","focus","arrowTransform","getListItemClassNames","onClick","display","isVisible","borderColor","transform","WebkitTransform","name","type","placeholder","onChange","handleUnitsOnClick","ref","background","width","window","innerWidth","height","marginTop","Component","Barcodes","filtered","products","filter","product","barcodes","map","index","productName","length","spaceBetween","slidesPerView","Main","populateProducts","showBarcodes","barcodeSlides","toggleBarcodes","handleBarcodeButtonOnClick","handleSearchChange","skusArray","Object","entries","productsData","sort","a","b","forEach","amount","newProducts","searchTerm","toLowerCase","includes","toLocaleLowerCase","show","String","fromCharCode","lineColor","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a33b4da7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <div className=\"container\">\r\n                <h1><i style={{color: '#f06c00'}}>FOA</i>ssist</h1>\r\n            </div>   \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Barcode from 'react-barcode';\r\n\r\nclass ListItem extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            inStock: false,\r\n            isDroppedDown: false,\r\n            units: ''\r\n        }\r\n\r\n        this.unitsInputRef = React.createRef();\r\n\r\n        this.handleListItemOnClick = this.handleListItemOnClick.bind(this);\r\n        this.handleArrowOnClick = this.handleArrowOnClick.bind(this);\r\n        this.handleUnitsChange = this.handleUnitsChange.bind(this);\r\n        this.handleUnitsDisplayOnClick = this.handleUnitsDisplayOnClick.bind(this);\r\n    }\r\n\r\n    handleListItemOnClick() {\r\n        if (this.state.units > 0) return;\r\n        this.setState({ inStock: ! this.state.inStock }, () => {\r\n            this.props.setInStock(this.props.sku, this.state.inStock);\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    handleArrowOnClick(event) {\r\n        event.stopPropagation(); // so it doesn't trigger parent onClick\r\n        this.setState({ isDroppedDown: ! this.state.isDroppedDown });\r\n    }\r\n\r\n    handleUnitsChange(event) {\r\n        const input = event.target.value;\r\n        this.setState({ units: input });\r\n\r\n        if (input > 0) {\r\n            this.setState({ inStock: true })\r\n            this.props.setInStock(this.props.sku, true);\r\n        } else {\r\n            this.setState({ inStock: false })\r\n            this.props.setInStock(this.props.sku, false);\r\n        }\r\n\r\n        this.props.setUnits(this.props.sku, event.target.value);\r\n    }\r\n\r\n    handleUnitsOnClick(event) {\r\n        event.stopPropagation(); // so it doesn't trigger parent onClick\r\n    }\r\n\r\n    handleUnitsDisplayOnClick(event) {\r\n        event.stopPropagation();\r\n        //if (this.state.isDroppedDown) return;\r\n        this.setState({ isDroppedDown: true }, () => this.unitsInputRef.current.focus());\r\n    }\r\n\r\n    getListItemClassNames() {\r\n        if (this.state.inStock) return 'list-item in-stock';\r\n        return 'list-item';\r\n    }\r\n\r\n    render() {\r\n        let arrowTransform;\r\n\r\n        this.state.isDroppedDown \r\n            ? arrowTransform = 'rotate(-135deg)' \r\n            : arrowTransform = 'rotate(45deg)';\r\n\r\n        return (\r\n            <div className={this.getListItemClassNames()}\r\n                onClick={this.handleListItemOnClick}\r\n                style={{\r\n                    display: this.props.isVisible ? 'block' : 'none'\r\n\r\n                }}\r\n                >\r\n\r\n                <div className=\"arrow-container\"\r\n                    onClick={this.handleArrowOnClick}\r\n                >\r\n                    <i className=\"arrow\"\r\n                        style={{\r\n                            borderColor: this.state.inStock ? '#fff' : '#333',\r\n                            transform: arrowTransform,\r\n                            WebkitTransform: arrowTransform,\r\n                        }}\r\n                    ></i>\r\n                </div>\r\n\r\n                <p className=\"list-item-name\">\r\n                    {this.props.name + '  '} \r\n                    <span className='units-display'\r\n                        style={{display: this.state.units ? 'inline-block' : 'none'}}\r\n                        onClick={this.handleUnitsDisplayOnClick}\r\n                    >\r\n                        {this.state.units}\r\n                    </span>\r\n                </p>\r\n\r\n                <div\r\n                    className=\"list-item-dropdown\"\r\n                    style = {{\r\n                        display: this.state.isDroppedDown ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                <div className='input-units-container'>\r\n                    <p>Units: </p>\r\n                    <input\r\n                        className='input-units'\r\n                        type='number'\r\n                        placeholder='0'\r\n                        onChange={this.handleUnitsChange}\r\n                        onClick={this.handleUnitsOnClick}\r\n                        ref={this.unitsInputRef}\r\n                    />\r\n                </div>\r\n                    \r\n                    <Barcode\r\n                        value={this.props.sku}\r\n                        background = {this.state.inStock ? '#fff' : '#ddd'}\r\n                        width = {window.innerWidth > 600 ? 5 : 3}\r\n                        height = {100}\r\n                        marginTop = {20}\r\n                    />\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\n\r\nimport Barcode from 'react-barcode'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\n\r\nfunction Barcodes(props) {\r\n\r\n    const filtered = props.products.filter(product => !product[1].inStock || product[1].units)\r\n\r\n    const barcodes = filtered.map((product, index) => (\r\n        <SwiperSlide\r\n            key={product[0]}\r\n        >\r\n            <Barcode \r\n                value = {product[0]}\r\n                width = {window.innerWidth > 600 ? 5 : 3}\r\n            />\r\n        <h2>{product[1].productName}</h2>\r\n        <h2 \r\n            className='barcode-units'\r\n            style={{display: product[1].units ? 'block' : 'none'}}\r\n        >\r\n            Units: {product[1].units}\r\n        </h2>\r\n\r\n        <h4>{index+1} / {filtered.length}</h4>\r\n        </SwiperSlide>\r\n    ));\r\n\r\n    return (\r\n        <div className='barcodes container'>\r\n            <Swiper\r\n                spaceBetween={50}\r\n                slidesPerView={1}\r\n            >\r\n\r\n                {barcodes}\r\n\r\n            </Swiper>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Barcodes;","import React, { Component } from 'react';\r\nimport ListItem from './ListItem';\r\nimport Barcodes from './Barcodes';\r\nimport Barcode from 'react-barcode';\r\n\r\nimport productsData from '../data/productsData.json';\r\n\r\nclass Main extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            products: this.populateProducts(),\r\n            showBarcodes: false,\r\n            barcodeSlides: []\r\n        }\r\n\r\n        this.toggleBarcodes = this.toggleBarcodes.bind(this);\r\n        this.handleBarcodeButtonOnClick = this.handleBarcodeButtonOnClick.bind(this);\r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n        this.filter = this.filter.bind(this);\r\n        this.setInStock = this.setInStock.bind(this);\r\n        this.setUnits = this.setUnits.bind(this);\r\n    }\r\n\r\n    populateProducts() {\r\n        const skusArray = Object.entries(productsData);\r\n        \r\n        skusArray.sort((a, b) => {\r\n            if(a[1].productName < b[1].productName) return -1;\r\n            if(a[1].productName > b[1].productName) return 1;\r\n            return 0;\r\n        });\r\n\r\n        skusArray.forEach(product => {\r\n            product.isVisible = true;\r\n            product[1].inStock = false;\r\n        })\r\n\r\n        return skusArray;\r\n    }\r\n\r\n    handleBarcodeButtonOnClick() {\r\n        this.setState({ showBarcodes: ! this.state.showBarcodes }, () => {\r\n            this.toggleBarcodes(this.state.showBarcodes);\r\n        })\r\n    }\r\n\r\n    handleSearchChange(event) {\r\n        this.filter(event.target.value)\r\n    }\r\n\r\n    setUnits(sku, amount) {\r\n        const newProducts = this.state.products.map(product => {\r\n            if (product[0] === sku) {\r\n                product[1].units = amount;\r\n            }\r\n            return product;\r\n        })\r\n\r\n        this.setState({ products: newProducts });\r\n    }\r\n\r\n    setInStock(sku, inStock) {\r\n        const newProducts = this.state.products.map(product => {\r\n            if (product[0] === sku) {\r\n                product[1].inStock = inStock;\r\n            }\r\n            return product;\r\n        })\r\n\r\n        this.setState({ products: newProducts });\r\n    }\r\n\r\n    filter(searchTerm) {\r\n        const newProducts = this.state.products.map(product => {\r\n            if (!product[1].productName.toLowerCase().includes(searchTerm.toLocaleLowerCase())) {\r\n                product.isVisible = false;\r\n            } else {\r\n                product.isVisible = true;\r\n            }\r\n            return product;\r\n        });\r\n\r\n        this.setState({ products: newProducts })\r\n    }\r\n\r\n    toggleBarcodes(show) {\r\n        if (show) {\r\n            this.setState({ \r\n                barcodeSlides: (\r\n                    <Barcodes\r\n                        products = {this.state.products}\r\n                    />\r\n                )\r\n            })\r\n        } else {\r\n            this.setState({ barcodeSlides: [] })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main>\r\n                <div className=\"list container\"\r\n                    style={{display: this.state.showBarcodes ? 'none' : 'block'}}\r\n                >\r\n                    <input\r\n                        className=\"search\"\r\n                        type=\"text\"\r\n                        placeholder=\"Search...\"\r\n                        value={this.state.searchTerm}\r\n                        onChange={this.handleSearchChange}\r\n                    />\r\n                        \r\n                    {this.state.products.map(product => (\r\n                        <ListItem \r\n                            name = {product[1].productName} \r\n                            sku = {product[0]}\r\n                            key = {product[0]}\r\n                            isVisible = {product.isVisible}\r\n                            setInStock = {this.setInStock}\r\n                            setUnits = {this.setUnits}\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                {this.state.barcodeSlides}\r\n\r\n                <div className='container'>\r\n                    <button\r\n                        onClick = {this.handleBarcodeButtonOnClick}\r\n                    >\r\n                    {this.state.showBarcodes \r\n                        ? String.fromCharCode(9776)\r\n                        : <Barcode \r\n                            value='Barcodes'\r\n                            background = '#f06c00'\r\n                            lineColor = '#ffffff'\r\n                            fontSize = {32}\r\n                            width = {window.innerWidth > 900 ? 3 : 2}\r\n                            height = {50}\r\n                            marginTop = {20}\r\n                        />\r\n                    }\r\n                        \r\n                    </button>\r\n                    <h4>Created By Lee Taylor</h4>\r\n                </div>\r\n                \r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './styles/App.scss';\n\n// COMPONENTS\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}